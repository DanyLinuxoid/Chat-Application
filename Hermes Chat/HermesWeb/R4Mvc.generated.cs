// <auto-generated />
// This file was generated by R4Mvc.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the r4mvc.json file (i.e. the settings file), save it and run the generator tool again.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo.Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
using System;
using System.CodeDom.Compiler;
using System.Diagnostics;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.AspNetCore.Routing;
using R4Mvc;

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static readonly HermesWeb.Controllers.AccountManagementController AccountManagement = new HermesWeb.Controllers.R4MVC_AccountManagementController();
    public static readonly HermesWeb.Controllers.ChatController Chat = new HermesWeb.Controllers.R4MVC_ChatController();
    public static readonly HermesWeb.Controllers.FileController File = new HermesWeb.Controllers.R4MVC_FileController();
    public static readonly HermesWeb.Controllers.HermesApplicationController HermesApplication = new HermesWeb.Controllers.R4MVC_HermesApplicationController();
    public static readonly HermesWeb.Controllers.HomeController Home = new HermesWeb.Controllers.R4MVC_HomeController();
    public static readonly HermesWeb.Controllers.RegistrationController Registration = new HermesWeb.Controllers.R4MVC_RegistrationController();
    public static readonly R4Mvc.SharedController Shared = new R4Mvc.SharedController();
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
public static partial class MVCPages
{
}

namespace R4Mvc
{
    [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy()
        {
        }

        public static Dummy Instance = new Dummy();
    }

    [GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
    public partial class SharedController
    {
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames => s_ViewNames;
            public class _ViewNamesClass
            {
                public readonly string Error = "Error";
            }

            public readonly string Error = "~/Views/Shared/Error.cshtml";
            static readonly _PartialClass s_Partial = new _PartialClass();
            public _PartialClass Partial => s_Partial;
            public partial class _PartialClass
            {
                static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
                public _ViewNamesClass ViewNames => s_ViewNames;
                public class _ViewNamesClass
                {
                    public readonly string _Layout = "_Layout";
                    public readonly string _NavigationBar = "_NavigationBar";
                    public readonly string _UploadFile = "_UploadFile";
                }

                public readonly string _Layout = "~/Views/Shared/Partial/_Layout.cshtml";
                public readonly string _NavigationBar = "~/Views/Shared/Partial/_NavigationBar.cshtml";
                public readonly string _UploadFile = "~/Views/Shared/Partial/_UploadFile.cshtml";
            }
        }

        static readonly ViewsClass s_Views = new ViewsClass();
        public ViewsClass Views => s_Views;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
public static partial class Links
{
    public const string UrlPath = "~";
    public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
    public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
    public static partial class bundle
    {
        public const string UrlPath = "~/bundle";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static readonly string accountManagementbundle_js = Url("accountManagementbundle.js");
        public static readonly string chatbundle_js = Url("chatbundle.js");
        public static readonly string layoutbundle_js = Url("layoutbundle.js");
    }

    public static partial class css
    {
        public const string UrlPath = "~/css";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static readonly string buttons_css = Url("buttons.css");
        public static readonly string chat_css = Url("chat.css");
        public static readonly string positions_css = Url("positions.css");
        public static readonly string site_css = Url("site.css");
    }

    public static partial class images
    {
        public const string UrlPath = "~/images";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static readonly string checkico_png = Url("checkico.png");
        public static readonly string editico_png = Url("editico.png");
        public static readonly string HermesCropped_jpg = Url("HermesCropped.jpg");
        public static readonly string Hermess_small_png = Url("Hermess_small.png");
        public static readonly string status_green_circle_png = Url("status-green-circle.png");
        public static readonly string temp_avatar_jpg = Url("temp-avatar.jpg");
        public static readonly string uploadico_jpg = Url("uploadico.jpg");
        public static readonly string user_acc_icon_png = Url("user-acc-icon.png");
    }

    public static partial class lib
    {
        public const string UrlPath = "~/lib";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static partial class bootstrap
        {
            public const string UrlPath = "~/lib/bootstrap";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static partial class dist
            {
                public const string UrlPath = "~/lib/bootstrap/dist";
                public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
                public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
                public static partial class css
                {
                    public const string UrlPath = "~/lib/bootstrap/dist/css";
                    public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
                    public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
                    public static readonly string bootstrap_grid_css = Url("bootstrap-grid.css");
                    public static readonly string bootstrap_grid_css_map = Url("bootstrap-grid.css.map");
                    public static readonly string bootstrap_grid_min_css = Url("bootstrap-grid.min.css");
                    public static readonly string bootstrap_grid_min_css_map = Url("bootstrap-grid.min.css.map");
                    public static readonly string bootstrap_reboot_css = Url("bootstrap-reboot.css");
                    public static readonly string bootstrap_reboot_css_map = Url("bootstrap-reboot.css.map");
                    public static readonly string bootstrap_reboot_min_css = Url("bootstrap-reboot.min.css");
                    public static readonly string bootstrap_reboot_min_css_map = Url("bootstrap-reboot.min.css.map");
                    public static readonly string bootstrap_css = Url("bootstrap.css");
                    public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
                    public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                    public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
                }

                public static partial class js
                {
                    public const string UrlPath = "~/lib/bootstrap/dist/js";
                    public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
                    public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
                    public static readonly string bootstrap_bundle_js = Url("bootstrap.bundle.js");
                    public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
                    public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
                    public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
                    public static readonly string bootstrap_js = Url("bootstrap.js");
                    public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
                    public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
                    public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
                }
            }

            public static readonly string LICENSE = Url("LICENSE");
        }

        public static partial class requirejs
        {
            public const string UrlPath = "~/lib/requirejs";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string requirejs_js = Url("requirejs.js");
        }
    }

    public static partial class _out
    {
        public const string UrlPath = "~/out";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static partial class AccountManagement
        {
            public const string UrlPath = "~/out/AccountManagement";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string AccountManagement_js = Url("AccountManagement.js");
            public static readonly string AccountManagement_js_map = Url("AccountManagement.js.map");
        }

        public static partial class Chat
        {
            public const string UrlPath = "~/out/Chat";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string Chat_js = Url("Chat.js");
            public static readonly string Chat_js_map = Url("Chat.js.map");
            public static readonly string Message_js = Url("Message.js");
            public static readonly string Message_js_map = Url("Message.js.map");
        }

        public static partial class Layout
        {
            public const string UrlPath = "~/out/Layout";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string FormScripts_js = Url("FormScripts.js");
            public static readonly string FormScripts_js_map = Url("FormScripts.js.map");
            public static readonly string Layout_js = Url("Layout.js");
            public static readonly string Layout_js_map = Url("Layout.js.map");
        }
    }

    public static partial class scripts
    {
        public const string UrlPath = "~/scripts";
        public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
        public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
        public static partial class AccountManagement
        {
            public const string UrlPath = "~/scripts/AccountManagement";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string AccountManagement_ts = Url("AccountManagement.ts");
        }

        public static partial class Chat
        {
            public const string UrlPath = "~/scripts/Chat";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string Chat_js = Url("Chat.js");
            public static readonly string Chat_js_map = Url("Chat.js.map");
            public static readonly string Chat_ts = Url("Chat.ts");
            public static readonly string Message_ts = Url("Message.ts");
        }

        public static partial class Layout
        {
            public const string UrlPath = "~/scripts/Layout";
            public static string Url() => R4MvcHelpers.ProcessVirtualPath(UrlPath);
            public static string Url(string fileName) => R4MvcHelpers.ProcessVirtualPath(UrlPath + "/" + fileName);
            public static readonly string FormScripts_ts = Url("FormScripts.ts");
            public static readonly string Layout_ts = Url("Layout.ts");
        }

        public static readonly string tsconfig_json = Url("tsconfig.json");
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal static class R4MvcHelpers
{
    private static string ProcessVirtualPathDefault(string virtualPath) => virtualPath;
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult : ActionResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_ActionResult(string area, string controller, string action, string protocol = null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_JsonResult : JsonResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base(null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_ContentResult : ContentResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_ContentResult(string area, string controller, string action, string protocol = null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_FileResult : FileResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_FileResult(string area, string controller, string action, string protocol = null): base(null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RedirectResult : RedirectResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RedirectResult(string area, string controller, string action, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RedirectToActionResult : RedirectToActionResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RedirectToActionResult(string area, string controller, string action, string protocol = null): base(" ", " ", " ")
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RedirectToRouteResult : RedirectToRouteResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RedirectToRouteResult(string area, string controller, string action, string protocol = null): base(null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_ActionResult : ActionResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_ActionResult(string pageName, string pageHandler, string protocol = null)
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_JsonResult : JsonResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_JsonResult(string pageName, string pageHandler, string protocol = null): base(null)
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_ContentResult : ContentResult, IR4MvcActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_ContentResult(string area, string controller, string action, string protocol = null)
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }

    public string Controller
    {
        get;
        set;
    }

    public string Action
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_FileResult : FileResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_FileResult(string pageName, string pageHandler, string protocol = null): base(null)
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectResult : RedirectResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectResult(string pageName, string pageHandler, string protocol = null): base(" ")
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectToActionResult : RedirectToActionResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectToActionResult(string pageName, string pageHandler, string protocol = null): base(" ", " ", " ")
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}

[GeneratedCode("R4Mvc", "1.0"), DebuggerNonUserCode]
internal partial class R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectToRouteResult : RedirectToRouteResult, IR4PageActionResult
{
    public R4Mvc_Microsoft_AspNetCore_Mvc_RazorPages_RedirectToRouteResult(string pageName, string pageHandler, string protocol = null): base(null)
    {
        this.InitMVCT4Result(pageName, pageHandler, protocol);
    }

    public string PageName
    {
        get;
        set;
    }

    public string PageHandler
    {
        get;
        set;
    }

    public string Protocol
    {
        get;
        set;
    }

    public RouteValueDictionary RouteValueDictionary
    {
        get;
        set;
    }
}
#pragma warning restore 1591, 3008, 3009, 0108
